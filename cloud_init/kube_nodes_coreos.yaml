#cloud-config

coreos:

  etcd2:
    proxy: on
    initial_cluster: ectd_elb=http://${ETCD_ELB_DNS_NAME}:2380
    listen-client-urls: http://0.0.0.0:2379

  flannel:
    etcd_endpoints: http://127.0.0.1:2379
    interface: $private_ipv4

  fleet:
    etcd-servers: http://127.0.0.1:2379
    metadata: etcd=proxy,kubernetes=node,region=${REGION},kubernetes_version=${KUBERNETES_VERSION}
    public-ip: $private_ipv4

  units:
    - name: etcd2.service
      command: start

    - name: fleet.service
      command: start

    - name: flanneld.service
      command: start
      drop-ins:
        - name: "40-ExecStartPre-symlink.conf"
          content: |
            [Service]
            ExecStartPre=/usr/bin/ln -sf /etc/instance.env /run/flannel/options.env

    - name: docker.service
      command: start
      drop-ins:
        - name: 40-flannel.conf
          content: |
            [Unit]
            Requires=flanneld.service
            After=flanneld.service
        - name: 50-restart.conf
          content: |
            [Service]
            Restart=always
            RestartSec=10

    - name: replace_private_ipv4.service
      command: start

    - name: kubelet.service
      command: start

write_files:
  - path: "/etc/private_ipv4"
    permissions: "0755"
    content: |
      $private_ipv4

  - path: "/etc/kubernetes.env"
    encoding: "gzip+base64"
    permissions: "0755"
    content: |
      ${KUBERNETES_ENV_FILE_TEMPLATE_CONTENT}

  - path: "/etc/instance.env"
    permissions: "0755"
    encoding: "gzip+base64"
    content: |
      ${INSTANCE_ENV_FILE_TEMPLATE_CONTENT}

  - path: "/etc/kubernetes/manifests/kube-proxy.yaml"
    permissions: "0755"
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-proxy
        namespace: kube-system
      spec:
        hostNetwork: true
        containers:
        - name: kube-proxy
          image: gcr.io/google_containers/hyperkube:v${KUBERNETES_VERSION}
          command:
          - /hyperkube
          - proxy
          - --master=${KUBE_API_SERVER_ENDPOINT}
          - --kubeconfig=/etc/kubernetes/worker-kubeconfig.yaml
          - --proxy-mode=iptables
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /etc/ssl/certs
              name: "ssl-certs"
            - mountPath: /etc/kubernetes/worker-kubeconfig.yaml
              name: "kubeconfig"
              readOnly: true
            - mountPath: /etc/kubernetes/ssl
              name: "etc-kube-ssl"
              readOnly: true
        volumes:
          - name: "ssl-certs"
            hostPath:
              path: "/usr/share/ca-certificates"
          - name: "kubeconfig"
            hostPath:
              path: "/etc/kubernetes/worker-kubeconfig.yaml"
          - name: "etc-kube-ssl"
            hostPath:
              path: "/etc/kubernetes/ssl"


  - path: "/etc/kubernetes/manifests/worker-kubeconfig.yaml"
    permissions: "0755"
    content: |
      apiVersion: v1
      clusters:
        -
          cluster:
            certificate-authority: /etc/kubernetes/ssl/ca.pem
          name: local
      contexts:
        -
          context:
            cluster: local
            user: kubelet
          name: kubelet-context
      current-context: kubelet-context
      kind: Config
      users:
        -
          name: kubelet
          user:
            client-certificate: /etc/kubernetes/ssl/worker.pem
            client-key: /etc/kubernetes/ssl/worker-key.pem
